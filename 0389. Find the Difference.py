# method 3
# same method as single number I, use bit operation to find the single char, ord(char)
class Solution(object):
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        res = 0
        for c in s:
            res ^= ord(c)
        for c in t:
            res ^= ord(c)
        return chr(res)
    

# method 2
from collections import Counter
class Solution2(object):
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        d = Counter(t) - Counter(s)
        return d.keys()[0]


# method 1
class Solution1(object):
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        s_dict = {}
        for letter in s:
            if letter in s_dict:
                s_dict[letter] += 1
            else:
                s_dict[letter] = 1  # wrong code: s_dict[letter] = 0
        
        for letter in t:
            if letter in s_dict:
                s_dict[letter] -= 1
                if s_dict[letter] < 0:
                    return letter
            else:
                return letter
        


"""
Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.
"""
